{"version":3,"sources":["Components/Header.tsx","api.ts","utils.ts","Components/SlideComponent.tsx","Routes/Home.tsx","Components/SearchMovieComponent.tsx","Components/SearchTvSerieseComponent.tsx","Routes/Search.tsx","Components/TvSlideComponent.tsx","Routes/Tv.tsx","App.tsx","Reset.ts","index.tsx","theme.ts"],"names":["Nav","styled","motion","nav","Col","div","Logo","svg","props","theme","red","Items","ul","Item","li","white","darker","lighter","Search","form","Circle","span","Input","input","logoVariants","normal","fillOpacity","active","transition","repeat","Infinity","navVariants","top","backgroundColor","scroll","Header","useState","searchOpen","setSearchOpen","scrollY","useViewportScroll","homeMatch","useRouteMatch","process","tvMatch","inputAnimation","useAnimation","navAnimation","history","useHistory","useEffect","onChange","get","start","useForm","register","handleSubmit","variants","animate","initial","whileHover","xmlns","width","height","viewBox","path","d","to","isExact","layoutId","onSubmit","data","push","keyword","onClick","scaleX","prev","x","type","fill","fillRule","clipRule","required","minLength","placeholder","API_KEY","BASE_PATH","makeImagePath","id","format","Slider","Row","Box","bgPhoto","Info","black","infoVariants","hover","opacity","delay","duaration","rowVariants","hidden","isBack","window","innerWidth","duration","visible","exit","boxVariants","scale","zIndex","y","SlideComponent","setClickedMovie","index","setIndex","leaving","setLeaving","setIsBack","toggleLeaving","AnimatePresence","custom","onExitComplete","drag","dragSnapToOrigin","onDragEnd","event","info","velocity","totalMovies","results","length","maxIndex","Math","floor","increaseSlide","decreaseSlide","slice","map","movie","onTap","backdrop_path","poster_path","title","overview","original_title","onBoxClicked","Wrapper","Loader","Banner","Title","h2","Overview","p","BannerDetailButton","GroupSection","main","SlideGroup","section","SlideTitle","h3","Overlay","BigMovie","BigCover","BigTitle","SmallTitle","h5","BigOverview","Home","useQuery","fetch","then","response","json","isLoading","topRatedMovie","isTopRatedLoading","upcomingMovie","isUpcomingMovie","movieDetailMatch","clickedMovie","console","log","style","params","movieId","backgroundImage","SearchMovieComponent","SearchTvSeriesComponent","totalTvSeries","tvSeries","tvSeriesId","location","useLocation","URLSearchParams","search","getSearch","enabled","tvSerieseDetailMatch","find","clickedTvSeries","onOverlayClick","filter","item","media_type","setClickedTvSeriese","name","original_name","Tv","latest","latestLoading","popular","popularLoading","topRated","topRatedLoading","tvDetailMatch","App","GlobalStyle","createGlobalStyle","client","QueryClient","ReactDOM","render","StrictMode","veryDark","document","getElementById"],"mappings":"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","file":"static/js/main.7580df72.chunk.js","sourcesContent":["import { Link, useRouteMatch, useHistory } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { motion, useAnimation, useViewportScroll } from \"framer-motion\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nconst Nav = styled(motion.nav)`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  position: fixed;\r\n  width: 100%;\r\n  top: 0;\r\n  font-size: 14px;\r\n  padding: 20px 60px;\r\n  color: white;\r\n`;\r\n\r\nconst Col = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst Logo = styled(motion.svg)`\r\n  margin-right: 50px;\r\n  width: 95px;\r\n  height: 25px;\r\n  fill: ${(props) => props.theme.red};\r\n  path {\r\n    stroke-width: 6px;\r\n    stroke: white;\r\n  }\r\n`;\r\n\r\nconst Items = styled.ul`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst Item = styled.li`\r\n  margin-right: 20px;\r\n  color: ${(props) => props.theme.white.darker};\r\n  transition: color 0.3s ease-in-out;\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  &:hover {\r\n    color: ${(props) => props.theme.white.lighter};\r\n  }\r\n`;\r\n\r\nconst Search = styled.form`\r\n  color: white;\r\n  display: flex;\r\n  align-items: center;\r\n  position: relative;\r\n  svg {\r\n    height: 25px;\r\n  }\r\n`;\r\n\r\nconst Circle = styled(motion.span)`\r\n  position: absolute;\r\n  width: 5px;\r\n  height: 5px;\r\n  border-radius: 2.5px;\r\n  bottom: -5px;\r\n  left: 0;\r\n  right: 0;\r\n  margin: 0 auto;\r\n  background-color: ${(props) => props.theme.red};\r\n`;\r\n\r\nconst Input = styled(motion.input)`\r\n  transform-origin: right center;\r\n  position: absolute;\r\n  right: 0px;\r\n  padding: 5px 10px;\r\n  padding-left: 40px;\r\n  z-index: -1;\r\n  color: white;\r\n  font-size: 16px;\r\n  background-color: transparent;\r\n  border: 1px solid ${(props) => props.theme.white.lighter};\r\n`;\r\n\r\nconst logoVariants = {\r\n  normal: {\r\n    fillOpacity: 1,\r\n  },\r\n  active: {\r\n    fillOpacity: [0, 1, 0],\r\n    transition: {\r\n      repeat: Infinity,\r\n    },\r\n  },\r\n};\r\n\r\nconst navVariants = {\r\n  top: {\r\n    backgroundColor: \"rgba(0, 0, 0, 0)\",\r\n  },\r\n  scroll: {\r\n    backgroundColor: \"rgba(0, 0, 0, 1)\",\r\n  },\r\n};\r\n\r\ninterface IForm {\r\n  keyword: string;\r\n}\r\n\r\nfunction Header() {\r\n  const [searchOpen, setSearchOpen] = useState(false);\r\n  const { scrollY } = useViewportScroll();\r\n  const homeMatch = useRouteMatch(`${process.env.PUBLIC_URL}/`);\r\n  const tvMatch = useRouteMatch(`${process.env.PUBLIC_URL}/tv`);\r\n  const inputAnimation = useAnimation();\r\n  const navAnimation = useAnimation();\r\n  const history = useHistory();\r\n\r\n  const toggleSearch = () => {\r\n    if (searchOpen) {\r\n      inputAnimation.start({\r\n        scaleX: 0,\r\n      });\r\n    } else {\r\n      inputAnimation.start({ scaleX: 1 });\r\n    }\r\n    setSearchOpen((prev) => !prev);\r\n  };\r\n\r\n  useEffect(() => {\r\n    scrollY.onChange(() => {\r\n      if (scrollY.get() > 80) {\r\n        navAnimation.start(\"scroll\");\r\n      } else {\r\n        navAnimation.start(\"top\");\r\n      }\r\n    });\r\n  }, [scrollY, navAnimation]);\r\n\r\n  const { register, handleSubmit } = useForm<IForm>();\r\n\r\n  const onValid = (data: IForm) => {\r\n    history.push(`${process.env.PUBLIC_URL}/search?keyword=${data.keyword}`);\r\n  };\r\n\r\n  return (\r\n    <Nav variants={navVariants} animate={navAnimation} initial={\"top\"}>\r\n      <Col>\r\n        <Logo\r\n          variants={logoVariants}\r\n          whileHover=\"active\"\r\n          animate=\"normal\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          width=\"1024\"\r\n          height=\"276.742\"\r\n          viewBox=\"0 0 1024 276.742\"\r\n        >\r\n          <motion.path d=\"M140.803 258.904c-15.404 2.705-31.079 3.516-47.294 5.676l-49.458-144.856v151.073c-15.404 1.621-29.457 3.783-44.051 5.945v-276.742h41.08l56.212 157.021v-157.021h43.511v258.904zm85.131-157.558c16.757 0 42.431-.811 57.835-.811v43.24c-19.189 0-41.619 0-57.835.811v64.322c25.405-1.621 50.809-3.785 76.482-4.596v41.617l-119.724 9.461v-255.39h119.724v43.241h-76.482v58.105zm237.284-58.104h-44.862v198.908c-14.594 0-29.188 0-43.239.539v-199.447h-44.862v-43.242h132.965l-.002 43.242zm70.266 55.132h59.187v43.24h-59.187v98.104h-42.433v-239.718h120.808v43.241h-78.375v55.133zm148.641 103.507c24.594.539 49.456 2.434 73.51 3.783v42.701c-38.646-2.434-77.293-4.863-116.75-5.676v-242.689h43.24v201.881zm109.994 49.457c13.783.812 28.377 1.623 42.43 3.242v-254.58h-42.43v251.338zm231.881-251.338l-54.863 131.615 54.863 145.127c-16.217-2.162-32.432-5.135-48.648-7.838l-31.078-79.994-31.617 73.51c-15.678-2.705-30.812-3.516-46.484-5.678l55.672-126.75-50.269-129.992h46.482l28.377 72.699 30.27-72.699h47.295z\" />\r\n        </Logo>\r\n        <Items>\r\n          <Item>\r\n            <Link to={`${process.env.PUBLIC_URL}`}>\r\n              영화 {homeMatch?.isExact && <Circle layoutId=\"circle\" />}\r\n            </Link>\r\n          </Item>\r\n          <Item>\r\n            <Link to={`${process.env.PUBLIC_URL}/tv`}>\r\n              TV 드라마 {tvMatch && <Circle layoutId=\"circle\" />}\r\n            </Link>\r\n          </Item>\r\n        </Items>\r\n      </Col>\r\n      <Col>\r\n        <Search onSubmit={handleSubmit(onValid)}>\r\n          <motion.svg\r\n            onClick={toggleSearch}\r\n            animate={{ x: searchOpen ? -215 : 0 }}\r\n            transition={{ type: \"linear\" }}\r\n            fill=\"currentColor\"\r\n            viewBox=\"0 0 20 20\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n          >\r\n            <path\r\n              fillRule=\"evenodd\"\r\n              d=\"M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z\"\r\n              clipRule=\"evenodd\"\r\n            ></path>\r\n          </motion.svg>\r\n          <Input\r\n            {...register(\"keyword\", { required: true, minLength: 2 })}\r\n            animate={inputAnimation}\r\n            initial={{ scaleX: 0 }}\r\n            transition={{ type: \"linear\" }}\r\n            placeholder=\"영화, TV 드라마 등\"\r\n          />\r\n        </Search>\r\n      </Col>\r\n    </Nav>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","const API_KEY = \"a2d7ad8d8018141b9c98d47ee554ff2a\";\r\nconst BASE_PATH = \"https://api.themoviedb.org/3\";\r\n\r\nexport interface IMovie {\r\n  id: number;\r\n  backdrop_path: string;\r\n  poster_path: string;\r\n  title: string;\r\n  overview: string;\r\n  original_title: string;\r\n}\r\n\r\nexport interface IGetMoviesResult {\r\n  dates: {\r\n    maximum: string;\r\n    minimum: string;\r\n  };\r\n  page: number;\r\n  results: IMovie[];\r\n  total_pages: number;\r\n  total_results: number;\r\n}\r\n\r\n//On the / (home) page implement sliders for: Latest movies, Top Rated Movies and Upcoming Movies.\r\nexport function getLatestMovies() {\r\n  return fetch(`${BASE_PATH}/movie/now_playing?api_key=${API_KEY}&language=ko`).then(\r\n    (response) => response.json()\r\n  );\r\n}\r\n\r\nexport function getTopMovies() {\r\n  return fetch(`${BASE_PATH}/movie/top_rated?api_key=${API_KEY}&language=ko`).then(\r\n    (response) => response.json()\r\n  );\r\n}\r\n\r\nexport function getUpcomingMovies() {\r\n  return fetch(`${BASE_PATH}/movie/upcoming?api_key=${API_KEY}&language=ko`).then(\r\n    (response) => response.json()\r\n  );\r\n}\r\n\r\nexport interface ITvSeriese {\r\n  id: number;\r\n  backdrop_path: string;\r\n  poster_path: string;\r\n  name: string;\r\n  overview: string;\r\n  original_name: string;\r\n}\r\n\r\nexport interface IGetTvSerieseResult {\r\n  page: number;\r\n  results: ITvSeriese[];\r\n  total_pages: number;\r\n  total_results: number;\r\n}\r\n\r\n//TV series Latest, Top Rated and Upcoming.\r\nexport function getLatestTvSeries() {\r\n  return fetch(`${BASE_PATH}/tv/on_the_air?api_key=${API_KEY}&language=ko`).then(\r\n    (response) => response.json()\r\n  );\r\n}\r\n\r\nexport function getPopularTvSeries() {\r\n  return fetch(`${BASE_PATH}/tv/popular?api_key=${API_KEY}&language=ko`).then(\r\n    (response) => response.json()\r\n  );\r\n}\r\n\r\nexport function getTopRatedTvSeries() {\r\n  return fetch(`${BASE_PATH}/tv/top_rated?api_key=${API_KEY}&language=ko`).then(\r\n    (response) => response.json()\r\n  );\r\n}\r\n\r\nexport interface IGetSearch {\r\n  page: number;\r\n  results: SearchResult[];\r\n  total_pages: number;\r\n  total_results: number;\r\n}\r\n\r\nexport interface SearchResult {\r\n  adult?: boolean;\r\n  backdrop_path: string;\r\n  genre_ids: number[];\r\n  id: number;\r\n  media_type: string;\r\n  original_language: string;\r\n  original_title?: string;\r\n  overview: string;\r\n  popularity: number;\r\n  poster_path: string;\r\n  release_date?: Date;\r\n  title?: string;\r\n  video?: boolean;\r\n  vote_average: number;\r\n  vote_count: number;\r\n  first_air_date?: string;\r\n  name?: string;\r\n  origin_country?: string[];\r\n  original_name?: string;\r\n}\r\n\r\n//Search\r\nexport function getSearch(keyword: string) {\r\n  return fetch(\r\n    `${BASE_PATH}/search/multi?api_key=${API_KEY}&language=ko&query=${keyword}&include_adult=true&region=kr`\r\n  ).then((response) => response.json());\r\n}\r\n","export function makeImagePath(id: string, format?: string) {\r\n  return `https://image.tmdb.org/t/p/${format ? format : \"original\"}/${id}`;\r\n}\r\n","import { AnimatePresence, motion, PanInfo } from \"framer-motion\";\r\nimport { Dispatch, SetStateAction, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { IGetMoviesResult, IMovie } from \"../api\";\r\nimport { makeImagePath } from \"../utils\";\r\n\r\nconst Slider = styled.div`\r\n  position: relative;\r\n  padding-top: 18%;\r\n`;\r\n\r\nconst Row = styled(motion.div)`\r\n  display: grid;\r\n  gap: 5px;\r\n  top: 0;\r\n  width: 100%;\r\n  grid-template-columns: repeat(7, 1fr);\r\n  position: absolute;\r\n  width: 100%;\r\n`;\r\n\r\nconst Box = styled(motion.div)<{ bgPhoto: string }>`\r\n  background-color: white;\r\n  background-image: url(${(props) => props.bgPhoto});\r\n  background-size: cover;\r\n  background-position: center center;\r\n  height: 250px;\r\n  font-size: 66px;\r\n  cursor: pointer;\r\n  &:first-child {\r\n    transform-origin: center left;\r\n  }\r\n  &:last-child {\r\n    transform-origin: center right;\r\n  }\r\n`;\r\n\r\nconst Info = styled(motion.div)`\r\n  padding: 10px;\r\n  background-color: ${(props) => props.theme.black.lighter};\r\n  opacity: 0;\r\n  position: absolute;\r\n  width: 100%;\r\n  bottom: 0;\r\n  h4 {\r\n    text-align: center;\r\n    font-size: 18px;\r\n  }\r\n`;\r\n\r\nconst infoVariants = {\r\n  hover: {\r\n    opacity: 1,\r\n    transition: {\r\n      delay: 0.1,\r\n      duaration: 0.2,\r\n      type: \"tween\",\r\n    },\r\n  },\r\n};\r\n\r\nconst padding = 30;\r\n\r\nconst rowVariants = {\r\n  hidden: (isBack: boolean) => {\r\n    return {\r\n      x: !isBack ? window.innerWidth - padding : -window.innerWidth + padding,\r\n      transition: {\r\n        duration: 0.1,\r\n      },\r\n    };\r\n  },\r\n  visible: {\r\n    x: 0,\r\n  },\r\n  exit: (isBack: boolean) => {\r\n    return {\r\n      x: !isBack ? -window.innerWidth + padding : window.innerWidth - padding,\r\n      transition: {\r\n        duration: 0.1,\r\n      },\r\n    };\r\n  },\r\n};\r\n\r\nconst boxVariants = {\r\n  normal: {\r\n    scale: 1,\r\n  },\r\n  hover: {\r\n    zIndex: 99,\r\n    scale: 1.2,\r\n    y: -60,\r\n    transition: {\r\n      type: \"tween\",\r\n      delay: 0.1,\r\n      duration: 0.2,\r\n    },\r\n  },\r\n};\r\n\r\ninterface ISliderProps {\r\n  data: IGetMoviesResult;\r\n  setClickedMovie: Dispatch<SetStateAction<IMovie>>;\r\n}\r\n\r\nfunction SlideComponent({ data, setClickedMovie }: ISliderProps) {\r\n  const offset = 7;\r\n  const [index, setIndex] = useState(0);\r\n  const [leaving, setLeaving] = useState(false);\r\n  const [isBack, setIsBack] = useState(false);\r\n  const history = useHistory();\r\n\r\n  const increaseSlide = () => {\r\n    if (data) {\r\n      if (leaving) return;\r\n      toggleLeaving();\r\n      const totalMovies = data.results.length - 1;\r\n      const maxIndex = Math.floor(totalMovies / offset) - 1;\r\n      setIndex((prev) => (prev === maxIndex ? 0 : prev + 1));\r\n    }\r\n  };\r\n\r\n  const decreaseSlide = () => {\r\n    if (data) {\r\n      if (leaving) return;\r\n      setLeaving(true);\r\n      const totalMovies = data.results.length - 1;\r\n      const maxIndex = Math.floor(totalMovies / offset) - 1;\r\n      setIndex((prev) => (prev <= 0 ? maxIndex : prev - 1));\r\n    }\r\n  };\r\n\r\n  const onBoxClicked = (movie: IMovie) => {\r\n    setClickedMovie({\r\n      id: movie.id,\r\n      backdrop_path: movie.backdrop_path,\r\n      poster_path: movie.poster_path,\r\n      title: movie.title,\r\n      overview: movie.overview,\r\n      original_title: movie.original_title,\r\n    });\r\n    history.push(`${process.env.PUBLIC_URL}/movies/${movie.id}`);\r\n  };\r\n\r\n  const toggleLeaving = () => setLeaving((prev) => !prev);\r\n\r\n  const handleDragEnd = (\r\n    event: MouseEvent | TouchEvent | PointerEvent,\r\n    info: PanInfo\r\n  ): void => {\r\n    if (info.velocity.x < -100) {\r\n      setIsBack(false);\r\n      increaseSlide();\r\n    }\r\n    if (info.velocity.x > 100) {\r\n      setIsBack(true);\r\n      decreaseSlide();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Slider>\r\n      <AnimatePresence\r\n        custom={isBack}\r\n        initial={false}\r\n        onExitComplete={toggleLeaving}\r\n      >\r\n        <Row\r\n          custom={isBack}\r\n          variants={rowVariants}\r\n          drag=\"x\"\r\n          dragSnapToOrigin\r\n          onDragEnd={handleDragEnd}\r\n          initial=\"hidden\"\r\n          animate=\"visible\"\r\n          exit=\"exit\"\r\n          transition={{ type: \"tween\", duration: 1 }}\r\n          key={index}\r\n        >\r\n          {data?.results\r\n            .slice(1)\r\n            .slice(offset * index, offset * index + offset)\r\n            .map((movie) => (\r\n              <Box\r\n                layoutId={movie.id + \"\"}\r\n                key={movie.id}\r\n                whileHover=\"hover\"\r\n                initial=\"normal\"\r\n                variants={boxVariants}\r\n                transition={{ type: \"tween\" }}\r\n                onTap={() => onBoxClicked(movie)}\r\n                bgPhoto={makeImagePath(movie.poster_path, \"w500\")}\r\n              >\r\n                <Info variants={infoVariants}>\r\n                  <h4>{movie.title}</h4>\r\n                </Info>\r\n              </Box>\r\n            ))}\r\n        </Row>\r\n      </AnimatePresence>\r\n    </Slider>\r\n  );\r\n}\r\n\r\nexport default SlideComponent;\r\n","import { useQuery } from \"react-query\";\r\nimport styled from \"styled-components\";\r\nimport { motion, AnimatePresence, useViewportScroll } from \"framer-motion\";\r\nimport {\r\n  getLatestMovies,\r\n  getTopMovies,\r\n  getUpcomingMovies,\r\n  IGetMoviesResult,\r\n  IMovie,\r\n} from \"../api\";\r\nimport { makeImagePath } from \"../utils\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\r\nimport SlideComponent from \"../Components/SlideComponent\";\r\n\r\nconst Wrapper = styled.div`\r\n  overflow-x: hidden;\r\n  padding: 0 0 60px;\r\n`;\r\n\r\nconst Loader = styled.div`\r\n  height: 20vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Banner = styled.div<{ bgPhoto: string }>`\r\n  height: 80vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  padding: 15px;\r\n  padding-bottom: 4rem;\r\n  background-image: linear-gradient(rgba(0, 0, 0, 0), rgba(0, 0, 0, 1)),\r\n    url(${(props) => props.bgPhoto});\r\n  background-position: top center;\r\n  background-size: cover;\r\n  background-position: top center;\r\n  background-size: 130%;\r\n`;\r\n\r\nconst Title = styled.h2`\r\n  font-size: 42px;\r\n  margin-bottom: 20px; ;\r\n`;\r\n\r\nconst Overview = styled.p`\r\n  font-size: 18px;\r\n  width: 50%;\r\n`;\r\n\r\nconst BannerDetailButton = styled(motion.div)`\r\n  cursor: pointer;\r\n  display: inline-block;\r\n  padding: 0.8em 1.2em;\r\n  margin-top: 2em;\r\n  background-color: white;\r\n  border-radius: 8px;\r\n  color: ${(props) => props.theme.black.lighter};\r\n`;\r\n\r\nconst GroupSection = styled.main`\r\n  margin-top: 0;\r\n`;\r\n\r\nconst SlideGroup = styled.section`\r\n  padding: 0 15px;\r\n  margin-bottom: 3rem;\r\n`;\r\n\r\nconst SlideTitle = styled.h3`\r\n  font-size: 1.25rem;\r\n  margin-bottom: 1em;\r\n`;\r\n\r\nconst Overlay = styled(motion.div)`\r\n  position: fixed;\r\n  top: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  opacity: 0;\r\n`;\r\n\r\nconst BigMovie = styled(motion.div)`\r\n  position: absolute;\r\n  width: 40vw;\r\n  height: 80vh;\r\n  left: 0;\r\n  right: 0;\r\n  margin: 0 auto;\r\n  border-radius: 15px;\r\n  overflow: hidden;\r\n  background-color: ${(props) => props.theme.black.lighter};\r\n`;\r\n\r\nconst BigCover = styled.div`\r\n  width: 100%;\r\n  background-size: cover;\r\n  background-position: center center;\r\n  height: 400px;\r\n`;\r\n\r\nconst BigTitle = styled.h3`\r\n  color: ${(props) => props.theme.white.lighter};\r\n  padding: 20px;\r\n  font-size: 34px;\r\n  position: relative;\r\n  top: -80px;\r\n`;\r\n\r\nconst SmallTitle = styled.h5`\r\n  color: ${(props) => props.theme.white.lighter};\r\n  padding: 20px;\r\n  top: -80px;\r\n  font-size: 15px;\r\n  line-height: 1.5;\r\n  font-weight: 400;\r\n  position: relative;\r\n`;\r\n\r\nconst BigOverview = styled.p`\r\n  padding: 20px;\r\n  position: relative;\r\n  font-size: 15px;\r\n  top: -80px;\r\n  color: ${(props) => props.theme.white.lighter};\r\n`;\r\n\r\nconst boxVariants = {\r\n  normal: {\r\n    scale: 1,\r\n  },\r\n  hover: {\r\n    scale: 1.2,\r\n    y: -70,\r\n    transition: {\r\n      duaration: 0.1,\r\n      type: \"tween\",\r\n    },\r\n  },\r\n};\r\n\r\nfunction Home() {\r\n  const { data, isLoading } = useQuery<IGetMoviesResult>(\r\n    [\"movies\", \"nowPlaying\"],\r\n    () => getLatestMovies()\r\n  );\r\n\r\n  const { data: topRatedMovie, isLoading: isTopRatedLoading } =\r\n    useQuery<IGetMoviesResult>([\"movies\", \"topRated\"], () => getTopMovies());\r\n\r\n  const { data: upcomingMovie, isLoading: isUpcomingMovie } =\r\n    useQuery<IGetMoviesResult>([\"movies\", \"upcoming\"], () =>\r\n      getUpcomingMovies()\r\n    );\r\n\r\n  const movieDetailMatch = useRouteMatch<{ movieId: string }>(\r\n    `${process.env.PUBLIC_URL}/movies/:movieId`\r\n  );\r\n\r\n  const { scrollY } = useViewportScroll();\r\n  const history = useHistory();\r\n  const [clickedMovie, setClickedMovie] = useState<IMovie>({\r\n    id: 0,\r\n    backdrop_path: \"\",\r\n    poster_path: \"\",\r\n    title: \"\",\r\n    overview: \"\",\r\n    original_title: \"\",\r\n  });\r\n\r\n  const onBoxClicked = (movie: any) => {\r\n    setClickedMovie({\r\n      id: movie.id,\r\n      backdrop_path: movie.backdrop_path,\r\n      poster_path: movie.poster_path,\r\n      title: movie.title,\r\n      overview: movie.overview,\r\n      original_title: movie.original_title,\r\n    });\r\n\r\n    history.push(`${process.env.PUBLIC_URL}/movies/${movie.id}`);\r\n  };\r\n\r\n  const onOverlayClick = () => {\r\n    setClickedMovie({\r\n      id: 0,\r\n      backdrop_path: \"\",\r\n      poster_path: \"\",\r\n      title: \"\",\r\n      overview: \"\",\r\n      original_title: \"\",\r\n    });\r\n    history.push(`${process.env.PUBLIC_URL}`);\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"data: \", data);\r\n  }, [data]);\r\n\r\n  return (\r\n    <Wrapper>\r\n      {isLoading && isTopRatedLoading && isUpcomingMovie ? (\r\n        <Loader>Loading...</Loader>\r\n      ) : (\r\n        <>\r\n          {/* 상단 배너 */}\r\n          <Banner bgPhoto={makeImagePath(data?.results[0].backdrop_path || \"\")}>\r\n            <Title>{data?.results[0].title}</Title>\r\n            <Overview>{data?.results[0].overview}</Overview>\r\n            <div>\r\n              <BannerDetailButton\r\n                variants={boxVariants}\r\n                initial=\"normal\"\r\n                transition={{ type: \"tween\" }}\r\n                onTap={() => onBoxClicked(data?.results[0])}\r\n                layoutId={data?.results[0].id + \"\"}\r\n              >\r\n                자세히 보기\r\n              </BannerDetailButton>\r\n            </div>\r\n          </Banner>\r\n          {/* 미디어 슬라이드 */}\r\n          <GroupSection>\r\n            <SlideGroup>\r\n              <SlideTitle>현재 상영 중</SlideTitle>\r\n              <SlideComponent data={data!} setClickedMovie={setClickedMovie} />\r\n            </SlideGroup>\r\n            <SlideGroup>\r\n              <SlideTitle>가장 평점이 높은</SlideTitle>\r\n              <SlideComponent\r\n                data={topRatedMovie!}\r\n                setClickedMovie={setClickedMovie}\r\n              />\r\n            </SlideGroup>\r\n            <SlideGroup>\r\n              <SlideTitle>개봉 예정</SlideTitle>\r\n              <SlideComponent\r\n                data={upcomingMovie!}\r\n                setClickedMovie={setClickedMovie}\r\n              />\r\n            </SlideGroup>\r\n          </GroupSection>\r\n          {/* 미디어 디테일 */}\r\n          <AnimatePresence>\r\n            {movieDetailMatch ? (\r\n              <>\r\n                <Overlay\r\n                  onClick={onOverlayClick}\r\n                  exit={{ opacity: 0 }}\r\n                  animate={{ opacity: 1 }}\r\n                />\r\n                <BigMovie\r\n                  style={{ top: scrollY.get() + 100 }}\r\n                  layoutId={movieDetailMatch.params.movieId}\r\n                >\r\n                  {clickedMovie && (\r\n                    <>\r\n                      <BigCover\r\n                        style={{\r\n                          backgroundImage: `linear-gradient(to top, black, transparent), url(${makeImagePath(\r\n                            clickedMovie.poster_path,\r\n                            \"w500\"\r\n                          )})`,\r\n                        }}\r\n                      />\r\n                      <BigTitle>{clickedMovie.title}</BigTitle>\r\n                      <SmallTitle>{clickedMovie.original_title}</SmallTitle>\r\n                      <BigOverview>{clickedMovie.overview}</BigOverview>\r\n                    </>\r\n                  )}\r\n                </BigMovie>\r\n              </>\r\n            ) : null}\r\n          </AnimatePresence>\r\n        </>\r\n      )}\r\n    </Wrapper>\r\n  );\r\n}\r\nexport default Home;\r\n","import { AnimatePresence, motion, PanInfo } from \"framer-motion\";\r\nimport { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { SearchResult } from \"../api\";\r\nimport { makeImagePath } from \"../utils\";\r\n\r\nconst Slider = styled.div`\r\n  position: relative;\r\n  padding-top: 14%;\r\n`;\r\n\r\nconst Row = styled(motion.div)`\r\n  display: grid;\r\n  gap: 5px;\r\n  top: 0;\r\n  width: 100%;\r\n  grid-template-columns: repeat(7, 1fr);\r\n  position: absolute;\r\n  width: 100%;\r\n`;\r\n\r\nconst Box = styled(motion.div)<{ bgPhoto: string }>`\r\n  background-color: white;\r\n  background-image: url(${(props) => props.bgPhoto});\r\n  background-size: cover;\r\n  background-position: center center;\r\n  height: 200px;\r\n  font-size: 66px;\r\n  cursor: pointer;\r\n  &:first-child {\r\n    transform-origin: center left;\r\n  }\r\n  &:last-child {\r\n    transform-origin: center right;\r\n  }\r\n`;\r\n\r\nconst Info = styled(motion.div)`\r\n  padding: 10px;\r\n  background-color: ${(props) => props.theme.black.lighter};\r\n  opacity: 0;\r\n  position: absolute;\r\n  width: 100%;\r\n  bottom: 0;\r\n  h4 {\r\n    text-align: center;\r\n    font-size: 18px;\r\n  }\r\n`;\r\n\r\nconst infoVariants = {\r\n  hover: {\r\n    opacity: 1,\r\n    transition: {\r\n      delay: 0.1,\r\n      duaration: 0.2,\r\n      type: \"tween\",\r\n    },\r\n  },\r\n};\r\n\r\nconst padding = 30;\r\n\r\nconst rowVariants = {\r\n  hidden: (isBack: boolean) => {\r\n    return {\r\n      x: !isBack ? window.innerWidth - padding : -window.innerWidth + padding,\r\n      transition: {\r\n        duration: 0.1,\r\n      },\r\n    };\r\n  },\r\n  visible: {\r\n    x: 0,\r\n  },\r\n  exit: (isBack: boolean) => {\r\n    return {\r\n      x: !isBack ? -window.innerWidth + padding : window.innerWidth - padding,\r\n      transition: {\r\n        duration: 0.1,\r\n      },\r\n    };\r\n  },\r\n};\r\n\r\nconst boxVariants = {\r\n  normal: {\r\n    scale: 1,\r\n  },\r\n  hover: {\r\n    zIndex: 99,\r\n    scale: 1.2,\r\n    y: -60,\r\n    transition: {\r\n      type: \"tween\",\r\n      delay: 0.1,\r\n      duration: 0.2,\r\n    },\r\n  },\r\n};\r\n\r\ninterface ISliderProps {\r\n  data: SearchResult[] | undefined;\r\n  keyword: string | null;\r\n}\r\n\r\nfunction SearchMovieComponent({ data, keyword }: ISliderProps) {\r\n  const offset = 7;\r\n  const [index, setIndex] = useState(0);\r\n  const [leaving, setLeaving] = useState(false);\r\n  const [isBack, setIsBack] = useState(false);\r\n  const history = useHistory();\r\n\r\n  const increaseSlide = () => {\r\n    if (data) {\r\n      if (leaving) return;\r\n      toggleLeaving();\r\n      const totalMovies = data.length - 1;\r\n      const maxIndex = Math.floor(totalMovies / offset) - 1;\r\n      setIndex((prev) => (prev === maxIndex ? 0 : prev + 1));\r\n    }\r\n  };\r\n\r\n  const decreaseSlide = () => {\r\n    if (data) {\r\n      if (leaving) return;\r\n      setLeaving(true);\r\n      const totalMovies = data.length - 1;\r\n      const maxIndex = Math.floor(totalMovies / offset) - 1;\r\n      setIndex((prev) => (prev <= 0 ? maxIndex : prev - 1));\r\n    }\r\n  };\r\n\r\n  const onMovieClicked = (movieId: number) => {\r\n    history.push(`${process.env.PUBLIC_URL}/search/movies/${movieId}?keyword=${keyword}`);\r\n  };\r\n\r\n  const toggleLeaving = () => setLeaving((prev) => !prev);\r\n\r\n  const handleDragEnd = (\r\n    event: MouseEvent | TouchEvent | PointerEvent,\r\n    info: PanInfo\r\n  ): void => {\r\n    if (info.velocity.x < -100) {\r\n      setIsBack(false);\r\n      increaseSlide();\r\n    }\r\n    if (info.velocity.x > 100) {\r\n      setIsBack(true);\r\n      decreaseSlide();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Slider>\r\n      <AnimatePresence\r\n        custom={isBack}\r\n        initial={false}\r\n        onExitComplete={toggleLeaving}\r\n      >\r\n        <Row\r\n          custom={isBack}\r\n          variants={rowVariants}\r\n          drag=\"x\"\r\n          dragSnapToOrigin\r\n          onDragEnd={handleDragEnd}\r\n          initial=\"hidden\"\r\n          animate=\"visible\"\r\n          exit=\"exit\"\r\n          transition={{ type: \"tween\", duration: 1 }}\r\n          key={index}\r\n        >\r\n          {data &&\r\n            data\r\n              .slice(1)\r\n              .slice(offset * index, offset * index + offset)\r\n              .map((movie) => (\r\n                <Box\r\n                  layoutId={movie.id + \"\"}\r\n                  key={movie.id}\r\n                  whileHover=\"hover\"\r\n                  initial=\"normal\"\r\n                  variants={boxVariants}\r\n                  transition={{ type: \"tween\" }}\r\n                  onTap={() => onMovieClicked(movie.id)}\r\n                  bgPhoto={makeImagePath(movie.poster_path, \"w500\")}\r\n                >\r\n                  <Info variants={infoVariants}>\r\n                    <h4>{movie.title}</h4>\r\n                  </Info>\r\n                </Box>\r\n              ))}\r\n        </Row>\r\n      </AnimatePresence>\r\n    </Slider>\r\n  );\r\n}\r\n\r\nexport default SearchMovieComponent;\r\n","import { AnimatePresence, motion, PanInfo } from \"framer-motion\";\r\nimport { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { SearchResult } from \"../api\";\r\nimport { makeImagePath } from \"../utils\";\r\n\r\nconst Slider = styled.div`\r\n  position: relative;\r\n  padding-top: 14%;\r\n`;\r\n\r\nconst Row = styled(motion.div)`\r\n  display: grid;\r\n  gap: 5px;\r\n  top: 0;\r\n  width: 100%;\r\n  grid-template-columns: repeat(7, 1fr);\r\n  position: absolute;\r\n  width: 100%;\r\n`;\r\n\r\nconst Box = styled(motion.div)<{ bgPhoto: string }>`\r\n  background-color: white;\r\n  background-image: url(${(props) => props.bgPhoto});\r\n  background-size: cover;\r\n  background-position: center center;\r\n  height: 200px;\r\n  font-size: 66px;\r\n  cursor: pointer;\r\n  &:first-child {\r\n    transform-origin: center left;\r\n  }\r\n  &:last-child {\r\n    transform-origin: center right;\r\n  }\r\n`;\r\n\r\nconst Info = styled(motion.div)`\r\n  padding: 10px;\r\n  background-color: ${(props) => props.theme.black.lighter};\r\n  opacity: 0;\r\n  position: absolute;\r\n  width: 100%;\r\n  bottom: 0;\r\n  h4 {\r\n    text-align: center;\r\n    font-size: 18px;\r\n  }\r\n`;\r\n\r\nconst infoVariants = {\r\n  hover: {\r\n    opacity: 1,\r\n    transition: {\r\n      delay: 0.1,\r\n      duaration: 0.2,\r\n      type: \"tween\",\r\n    },\r\n  },\r\n};\r\n\r\nconst padding = 30;\r\n\r\nconst rowVariants = {\r\n  hidden: (isBack: boolean) => {\r\n    return {\r\n      x: !isBack ? window.innerWidth - padding : -window.innerWidth + padding,\r\n      transition: {\r\n        duration: 0.1,\r\n      },\r\n    };\r\n  },\r\n  visible: {\r\n    x: 0,\r\n  },\r\n  exit: (isBack: boolean) => {\r\n    return {\r\n      x: !isBack ? -window.innerWidth + padding : window.innerWidth - padding,\r\n      transition: {\r\n        duration: 0.1,\r\n      },\r\n    };\r\n  },\r\n};\r\n\r\nconst boxVariants = {\r\n  normal: {\r\n    scale: 1,\r\n  },\r\n  hover: {\r\n    zIndex: 99,\r\n    scale: 1.2,\r\n    y: -60,\r\n    transition: {\r\n      type: \"tween\",\r\n      delay: 0.1,\r\n      duration: 0.2,\r\n    },\r\n  },\r\n};\r\n\r\ninterface ISliderProps {\r\n  data: SearchResult[] | undefined;\r\n  keyword: string | null;\r\n}\r\n\r\nfunction SearchTvSeriesComponent({ data, keyword }: ISliderProps) {\r\n  const offset = 7;\r\n  const [index, setIndex] = useState(0);\r\n  const [leaving, setLeaving] = useState(false);\r\n  const [isBack, setIsBack] = useState(false);\r\n  const history = useHistory();\r\n\r\n  const increaseSlide = () => {\r\n    if (data) {\r\n      if (leaving) return;\r\n      toggleLeaving();\r\n      const totalTvSeries = data.length - 1;\r\n      const maxIndex = Math.floor(totalTvSeries / offset) - 1;\r\n      setIndex((prev) => (prev === maxIndex ? 0 : prev + 1));\r\n    }\r\n  };\r\n\r\n  const decreaseSlide = () => {\r\n    if (data) {\r\n      if (leaving) return;\r\n      setLeaving(true);\r\n      const totalTvSeries = data.length - 1;\r\n      const maxIndex = Math.floor(totalTvSeries / offset) - 1;\r\n      setIndex((prev) => (prev <= 0 ? maxIndex : prev - 1));\r\n    }\r\n  };\r\n\r\n  const onTvSeriesClicked = (tvSeriesId: number) => {\r\n    history.push(`${process.env.PUBLIC_URL}/search/tv/${tvSeriesId}?keyword=${keyword}`);\r\n  };\r\n\r\n  const toggleLeaving = () => setLeaving((prev) => !prev);\r\n\r\n  const handleDragEnd = (\r\n    event: MouseEvent | TouchEvent | PointerEvent,\r\n    info: PanInfo\r\n  ): void => {\r\n    if (info.velocity.x < -100) {\r\n      setIsBack(false);\r\n      increaseSlide();\r\n    }\r\n    if (info.velocity.x > 100) {\r\n      setIsBack(true);\r\n      decreaseSlide();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Slider>\r\n      <AnimatePresence\r\n        custom={isBack}\r\n        initial={false}\r\n        onExitComplete={toggleLeaving}\r\n      >\r\n        <Row\r\n          custom={isBack}\r\n          variants={rowVariants}\r\n          drag=\"x\"\r\n          dragSnapToOrigin\r\n          onDragEnd={handleDragEnd}\r\n          initial=\"hidden\"\r\n          animate=\"visible\"\r\n          exit=\"exit\"\r\n          transition={{ type: \"tween\", duration: 1 }}\r\n          key={index}\r\n        >\r\n          {data &&\r\n            data\r\n              .slice(1)\r\n              .slice(offset * index, offset * index + offset)\r\n              .map((tvSeries) => (\r\n                <Box\r\n                  layoutId={tvSeries.id + \"\"}\r\n                  key={tvSeries.id}\r\n                  whileHover=\"hover\"\r\n                  initial=\"normal\"\r\n                  variants={boxVariants}\r\n                  transition={{ type: \"tween\" }}\r\n                  onTap={() => onTvSeriesClicked(tvSeries.id)}\r\n                  bgPhoto={makeImagePath(tvSeries.poster_path, \"w500\")}\r\n                >\r\n                  <Info variants={infoVariants}>\r\n                    <h4>{tvSeries.title}</h4>\r\n                  </Info>\r\n                </Box>\r\n              ))}\r\n        </Row>\r\n      </AnimatePresence>\r\n    </Slider>\r\n  );\r\n}\r\n\r\nexport default SearchTvSeriesComponent;\r\n","import styled from \"styled-components\";\r\nimport { motion, AnimatePresence, useViewportScroll } from \"framer-motion\";\r\nimport { useQuery } from \"react-query\";\r\nimport { useLocation } from \"react-router\";\r\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\r\nimport { getSearch, IGetSearch } from \"../api\";\r\nimport { makeImagePath } from \"../utils\";\r\nimport MovieSlideComponent from \"../Components/SearchMovieComponent\";\r\nimport SearchTvSeriesComponent from \"../Components/SearchTvSerieseComponent\";\r\n\r\nconst Wrapper = styled.div`\r\n  overflow-x: hidden;\r\n  padding: 0 0 60px;\r\n`;\r\n\r\nconst Loader = styled.div`\r\n  height: 20vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst GroupSection = styled.main`\r\n  margin-top: 150px;\r\n`;\r\n\r\nconst SlideGroup = styled.section`\r\n  padding: 0 15px;\r\n  margin-bottom: 3rem;\r\n`;\r\n\r\nconst SlideTitle = styled.h3`\r\n  font-size: 1.25rem;\r\n  margin-bottom: 1em;\r\n`;\r\n\r\nconst Overlay = styled(motion.div)`\r\n  position: fixed;\r\n  top: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  opacity: 0;\r\n`;\r\n\r\nconst BigMovie = styled(motion.div)`\r\n  position: absolute;\r\n  width: 40vw;\r\n  height: 80vh;\r\n  left: 0;\r\n  right: 0;\r\n  margin: 0 auto;\r\n  border-radius: 15px;\r\n  overflow: hidden;\r\n  background-color: ${(props) => props.theme.black.lighter};\r\n`;\r\n\r\nconst BigCover = styled.div`\r\n  width: 100%;\r\n  background-size: cover;\r\n  background-position: center center;\r\n  height: 400px;\r\n`;\r\n\r\nconst BigTitle = styled.h3`\r\n  color: ${(props) => props.theme.white.lighter};\r\n  padding: 20px;\r\n  font-size: 34px;\r\n  position: relative;\r\n  top: -80px;\r\n`;\r\n\r\nconst BigOverview = styled.p`\r\n  padding: 20px;\r\n  position: relative;\r\n  font-size: 15px;\r\n  top: -80px;\r\n  color: ${(props) => props.theme.white.lighter};\r\n`;\r\n\r\nfunction Search() {\r\n  const location = useLocation();\r\n  const keyword = new URLSearchParams(location.search).get(\"keyword\");\r\n  const history = useHistory();\r\n  const { scrollY } = useViewportScroll();\r\n\r\n  const { data, isLoading } = useQuery<IGetSearch>(\r\n    [\"search\", keyword],\r\n    () => getSearch(keyword!),\r\n    { enabled: !!keyword }\r\n  );\r\n\r\n  const movieDetailMatch = useRouteMatch<{ movieId: string }>(\r\n    `${process.env.PUBLIC_URL}/search/movies/:movieId`\r\n  );\r\n  const tvSerieseDetailMatch = useRouteMatch<{ tvSeriesId: string }>(\r\n    `${process.env.PUBLIC_URL}/search/tv/:tvSeriesId`\r\n  );\r\n\r\n  const clickedMovie =\r\n    movieDetailMatch?.params.movieId &&\r\n    data?.results.find(\r\n      (movie) => movie.id === +movieDetailMatch.params.movieId\r\n    );\r\n\r\n  const clickedTvSeries =\r\n    tvSerieseDetailMatch?.params.tvSeriesId &&\r\n    data?.results.find(\r\n      (tvSeries) => tvSeries.id === +tvSerieseDetailMatch.params.tvSeriesId\r\n    );\r\n\r\n  const onOverlayClick = () =>\r\n    history.push(`${process.env.PUBLIC_URL}/search?keyword=${keyword}`);\r\n\r\n  return (\r\n    <Wrapper>\r\n      {isLoading ? (\r\n        <Loader>Loading...</Loader>\r\n      ) : (\r\n        <>\r\n          {/* 미디어 슬라이드 */}\r\n          <GroupSection>\r\n            <SlideGroup>\r\n              <SlideTitle>영화</SlideTitle>\r\n              <MovieSlideComponent\r\n                data={data?.results.filter(\r\n                  (item) => item.media_type === \"movie\"\r\n                )}\r\n                keyword={keyword}\r\n              />\r\n              <SlideTitle>TV 시리즈</SlideTitle>\r\n              <SearchTvSeriesComponent\r\n                data={data?.results.filter((item) => item.media_type === \"tv\")}\r\n                keyword={keyword}\r\n              />\r\n            </SlideGroup>\r\n          </GroupSection>\r\n          {/* 영화 디테일 */}\r\n          <AnimatePresence>\r\n            {movieDetailMatch ? (\r\n              <>\r\n                <Overlay\r\n                  onClick={onOverlayClick}\r\n                  exit={{ opacity: 0 }}\r\n                  animate={{ opacity: 1 }}\r\n                />\r\n                <BigMovie\r\n                  style={{ top: scrollY.get() + 100 }}\r\n                  layoutId={movieDetailMatch.params.movieId}\r\n                >\r\n                  {clickedMovie && (\r\n                    <>\r\n                      <BigCover\r\n                        style={{\r\n                          backgroundImage: `linear-gradient(to top, black, transparent), url(${makeImagePath(\r\n                            clickedMovie.poster_path,\r\n                            \"w500\"\r\n                          )})`,\r\n                        }}\r\n                      />\r\n                      <BigTitle>{clickedMovie.title}</BigTitle>\r\n                      <BigOverview>{clickedMovie.overview}</BigOverview>\r\n                    </>\r\n                  )}\r\n                </BigMovie>\r\n              </>\r\n            ) : null}\r\n          </AnimatePresence>\r\n          {/* TV 시리즈 디테일 */}\r\n          <AnimatePresence>\r\n            {tvSerieseDetailMatch ? (\r\n              <>\r\n                <Overlay\r\n                  onClick={onOverlayClick}\r\n                  exit={{ opacity: 0 }}\r\n                  animate={{ opacity: 1 }}\r\n                />\r\n                <BigMovie\r\n                  style={{ top: scrollY.get() + 100 }}\r\n                  layoutId={tvSerieseDetailMatch.params.tvSeriesId}\r\n                >\r\n                  {clickedTvSeries && (\r\n                    <>\r\n                      <BigCover\r\n                        style={{\r\n                          backgroundImage: `linear-gradient(to top, black, transparent), url(${makeImagePath(\r\n                            clickedTvSeries.poster_path,\r\n                            \"w500\"\r\n                          )})`,\r\n                        }}\r\n                      />\r\n                      <BigTitle>{clickedTvSeries.title}</BigTitle>\r\n                      <BigOverview>{clickedTvSeries.overview}</BigOverview>\r\n                    </>\r\n                  )}\r\n                </BigMovie>\r\n              </>\r\n            ) : null}\r\n          </AnimatePresence>\r\n        </>\r\n      )}\r\n    </Wrapper>\r\n  );\r\n}\r\nexport default Search;\r\n","import { AnimatePresence, motion, PanInfo } from \"framer-motion\";\r\nimport { Dispatch, SetStateAction, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { IGetTvSerieseResult, ITvSeriese } from \"../api\";\r\nimport { makeImagePath } from \"../utils\";\r\n\r\nconst Slider = styled.div`\r\n  position: relative;\r\n  padding-top: 18%;\r\n`;\r\n\r\nconst Row = styled(motion.div)`\r\n  display: grid;\r\n  gap: 5px;\r\n  top: 0;\r\n  width: 100%;\r\n  grid-template-columns: repeat(7, 1fr);\r\n  position: absolute;\r\n  width: 100%;\r\n`;\r\n\r\nconst Box = styled(motion.div)<{ bgPhoto: string }>`\r\n  background-color: white;\r\n  background-image: url(${(props) => props.bgPhoto});\r\n  background-size: cover;\r\n  background-position: center center;\r\n  height: 250px;\r\n  font-size: 66px;\r\n  cursor: pointer;\r\n  &:first-child {\r\n    transform-origin: center left;\r\n  }\r\n  &:last-child {\r\n    transform-origin: center right;\r\n  }\r\n`;\r\n\r\nconst Info = styled(motion.div)`\r\n  padding: 10px;\r\n  background-color: ${(props) => props.theme.black.lighter};\r\n  opacity: 0;\r\n  position: absolute;\r\n  width: 100%;\r\n  bottom: 0;\r\n  h4 {\r\n    text-align: center;\r\n    font-size: 18px;\r\n  }\r\n`;\r\n\r\nconst infoVariants = {\r\n  hover: {\r\n    opacity: 1,\r\n    transition: {\r\n      delay: 0.1,\r\n      duaration: 0.2,\r\n      type: \"tween\",\r\n    },\r\n  },\r\n};\r\n\r\nconst padding = 30;\r\n\r\nconst rowVariants = {\r\n  hidden: (isBack: boolean) => {\r\n    return {\r\n      x: !isBack ? window.innerWidth - padding : -window.innerWidth + padding,\r\n      transition: {\r\n        duration: 0.1,\r\n      },\r\n    };\r\n  },\r\n  visible: {\r\n    x: 0,\r\n  },\r\n  exit: (isBack: boolean) => {\r\n    return {\r\n      x: !isBack ? -window.innerWidth + padding : window.innerWidth - padding,\r\n      transition: {\r\n        duration: 0.1,\r\n      },\r\n    };\r\n  },\r\n};\r\n\r\nconst boxVariants = {\r\n  normal: {\r\n    scale: 1,\r\n  },\r\n  hover: {\r\n    zIndex: 99,\r\n    scale: 1.2,\r\n    y: -60,\r\n    transition: {\r\n      type: \"tween\",\r\n      delay: 0.1,\r\n      duration: 0.2,\r\n    },\r\n  },\r\n};\r\n\r\ninterface ISliderProps {\r\n  data: IGetTvSerieseResult;\r\n  setClickedTvSeriese: Dispatch<SetStateAction<ITvSeriese>>;\r\n}\r\n\r\nfunction SlideComponent({ data, setClickedTvSeriese }: ISliderProps) {\r\n  const offset = 7;\r\n  const [index, setIndex] = useState(0);\r\n  const [leaving, setLeaving] = useState(false);\r\n  const [isBack, setIsBack] = useState(false);\r\n  const history = useHistory();\r\n\r\n  const increaseSlide = () => {\r\n    if (data) {\r\n      if (leaving) return;\r\n      toggleLeaving();\r\n      const totalTvSeries = data.results.length - 1;\r\n      const maxIndex = Math.floor(totalTvSeries / offset) - 1;\r\n      setIndex((prev) => (prev === maxIndex ? 0 : prev + 1));\r\n    }\r\n  };\r\n\r\n  const decreaseSlide = () => {\r\n    if (data) {\r\n      if (leaving) return;\r\n      setLeaving(true);\r\n      const totalTvSeries = data.results.length - 1;\r\n      const maxIndex = Math.floor(totalTvSeries / offset) - 1;\r\n      setIndex((prev) => (prev <= 0 ? maxIndex : prev - 1));\r\n    }\r\n  };\r\n\r\n  const onBoxClicked = (tvSeries: ITvSeriese) => {\r\n    setClickedTvSeriese({\r\n      id: tvSeries.id,\r\n      backdrop_path: tvSeries.backdrop_path,\r\n      poster_path: tvSeries.poster_path,\r\n      name: tvSeries.name,\r\n      overview: tvSeries.overview,\r\n      original_name: \"\",\r\n    });\r\n    history.push(`${process.env.PUBLIC_URL}/tv/${tvSeries.id}`);\r\n  };\r\n\r\n  const toggleLeaving = () => setLeaving((prev) => !prev);\r\n\r\n  const handleDragEnd = (\r\n    event: MouseEvent | TouchEvent | PointerEvent,\r\n    info: PanInfo\r\n  ): void => {\r\n    if (info.velocity.x < -100) {\r\n      setIsBack(false);\r\n      increaseSlide();\r\n    }\r\n    if (info.velocity.x > 100) {\r\n      setIsBack(true);\r\n      decreaseSlide();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Slider>\r\n      <AnimatePresence\r\n        custom={isBack}\r\n        initial={false}\r\n        onExitComplete={toggleLeaving}\r\n      >\r\n        <Row\r\n          custom={isBack}\r\n          variants={rowVariants}\r\n          drag=\"x\"\r\n          dragSnapToOrigin\r\n          onDragEnd={handleDragEnd}\r\n          initial=\"hidden\"\r\n          animate=\"visible\"\r\n          exit=\"exit\"\r\n          transition={{ type: \"tween\", duration: 1 }}\r\n          key={index}\r\n        >\r\n          {data?.results\r\n            .slice(1)\r\n            .slice(offset * index, offset * index + offset)\r\n            .map((tvSeries) => (\r\n              <Box\r\n                layoutId={tvSeries.id + \"\"}\r\n                key={tvSeries.id}\r\n                whileHover=\"hover\"\r\n                initial=\"normal\"\r\n                variants={boxVariants}\r\n                transition={{ type: \"tween\" }}\r\n                onTap={() => onBoxClicked(tvSeries)}\r\n                bgPhoto={makeImagePath(\r\n                  tvSeries.backdrop_path ?? tvSeries.poster_path,\r\n                  \"w500\"\r\n                )}\r\n              >\r\n                <Info variants={infoVariants}>\r\n                  <h4>{tvSeries.name}</h4>\r\n                </Info>\r\n              </Box>\r\n            ))}\r\n        </Row>\r\n      </AnimatePresence>\r\n    </Slider>\r\n  );\r\n}\r\n\r\nexport default SlideComponent;\r\n","import { useQuery } from \"react-query\";\r\nimport styled from \"styled-components\";\r\nimport { motion, AnimatePresence, useViewportScroll } from \"framer-motion\";\r\nimport {\r\n  getLatestTvSeries,\r\n  getPopularTvSeries,\r\n  getTopRatedTvSeries,\r\n  IGetTvSerieseResult,\r\n  ITvSeriese,\r\n} from \"../api\";\r\nimport { makeImagePath } from \"../utils\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\r\nimport SlideComponent from \"../Components/TvSlideComponent\";\r\n\r\nconst Wrapper = styled.div`\r\n  overflow-x: hidden;\r\n  padding: 0 0 60px;\r\n`;\r\n\r\nconst Loader = styled.div`\r\n  height: 20vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Banner = styled.div<{ bgPhoto: string }>`\r\n  height: 80vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  padding: 15px;\r\n  padding-bottom: 4rem;\r\n  background-image: linear-gradient(rgba(0, 0, 0, 0), rgba(0, 0, 0, 1)),\r\n    url(${(props) => props.bgPhoto});\r\n  background-position: top center;\r\n  background-size: cover;\r\n  background-position: top center;\r\n  background-size: 130%;\r\n`;\r\n\r\nconst Title = styled.h2`\r\n  font-size: 42px;\r\n  margin-bottom: 20px; ;\r\n`;\r\n\r\nconst Overview = styled.p`\r\n  font-size: 18px;\r\n  width: 50%;\r\n`;\r\n\r\nconst BannerDetailButton = styled(motion.div)`\r\n  cursor: pointer;\r\n  display: inline-block;\r\n  padding: 0.8em 1.2em;\r\n  margin-top: 2em;\r\n  background-color: white;\r\n  border-radius: 8px;\r\n  color: ${(props) => props.theme.black.lighter};\r\n`;\r\n\r\nconst GroupSection = styled.main`\r\n  margin-top: 0;\r\n`;\r\n\r\nconst SlideGroup = styled.section`\r\n  padding: 0 15px;\r\n  margin-bottom: 3rem;\r\n`;\r\n\r\nconst SlideTitle = styled.h3`\r\n  font-size: 1.25rem;\r\n  margin-bottom: 1em;\r\n`;\r\n\r\nconst Overlay = styled(motion.div)`\r\n  position: fixed;\r\n  top: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  opacity: 0;\r\n`;\r\n\r\nconst BigMovie = styled(motion.div)`\r\n  position: absolute;\r\n  width: 40vw;\r\n  height: 80vh;\r\n  left: 0;\r\n  right: 0;\r\n  margin: 0 auto;\r\n  border-radius: 15px;\r\n  overflow: hidden;\r\n  background-color: ${(props) => props.theme.black.lighter};\r\n`;\r\n\r\nconst BigCover = styled.div`\r\n  width: 100%;\r\n  background-size: cover;\r\n  background-position: center center;\r\n  height: 400px;\r\n`;\r\n\r\nconst BigTitle = styled.h3`\r\n  color: ${(props) => props.theme.white.lighter};\r\n  padding: 20px;\r\n  font-size: 34px;\r\n  position: relative;\r\n  top: -80px;\r\n`;\r\n\r\nconst SmallTitle = styled.h5`\r\n  color: ${(props) => props.theme.white.lighter};\r\n  padding: 20px;\r\n  top: -80px;\r\n  font-size: 15px;\r\n  line-height: 1.5;\r\n  font-weight: 400;\r\n  position: relative;\r\n`;\r\n\r\nconst BigOverview = styled.p`\r\n  padding: 20px;\r\n  position: relative;\r\n  font-size: 15px;\r\n  top: -80px;\r\n  color: ${(props) => props.theme.white.lighter};\r\n`;\r\n\r\nconst boxVariants = {\r\n  normal: {\r\n    scale: 1,\r\n  },\r\n  hover: {\r\n    scale: 1.2,\r\n    y: -70,\r\n    transition: {\r\n      duaration: 0.1,\r\n      type: \"tween\",\r\n    },\r\n  },\r\n};\r\n\r\nfunction Tv() {\r\n  const { data: latest, isLoading: latestLoading } =\r\n    useQuery<IGetTvSerieseResult>([\"tvSeries\", \"lated\"], () =>\r\n      getLatestTvSeries()\r\n    );\r\n\r\n  const { data: popular, isLoading: popularLoading } =\r\n    useQuery<IGetTvSerieseResult>([\"tvSeries\", \"popular\"], () =>\r\n      getPopularTvSeries()\r\n    );\r\n\r\n  const { data: topRated, isLoading: topRatedLoading } =\r\n    useQuery<IGetTvSerieseResult>([\"tvSeries\", \"topRated\"], () =>\r\n      getTopRatedTvSeries()\r\n    );\r\n\r\n  const { scrollY } = useViewportScroll();\r\n  const history = useHistory();\r\n  const [clickedTvSeries, setClickedTvSeriese] = useState<ITvSeriese>({\r\n    id: 0,\r\n    backdrop_path: \"\",\r\n    poster_path: \"\",\r\n    name: \"\",\r\n    overview: \"\",\r\n    original_name: \"\",\r\n  });\r\n  const tvDetailMatch = useRouteMatch<{ tvSeriesId: string }>(\r\n    `${process.env.PUBLIC_URL}/tv/:tvSeriesId`\r\n  );\r\n\r\n  const onBoxClicked = (tvSeries: any) => {\r\n    setClickedTvSeriese({\r\n      id: tvSeries.id,\r\n      backdrop_path: tvSeries.backdrop_path,\r\n      poster_path: tvSeries.poster_path,\r\n      name: tvSeries.name,\r\n      overview: tvSeries.overview,\r\n      original_name: tvSeries.original_name,\r\n    });\r\n    history.push(`${process.env.PUBLIC_URL}/tv/${tvSeries.id}`);\r\n  };\r\n\r\n  const onOverlayClick = () => {\r\n    setClickedTvSeriese({\r\n      id: 0,\r\n      backdrop_path: \"\",\r\n      poster_path: \"\",\r\n      name: \"\",\r\n      overview: \"\",\r\n      original_name: \"\",\r\n    });\r\n    history.push(`${process.env.PUBLIC_URL}/tv`);\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"data: \", latest);\r\n  }, [latest]);\r\n\r\n  return (\r\n    <Wrapper>\r\n      {latestLoading && popularLoading && topRatedLoading ? (\r\n        <Loader>Loading...</Loader>\r\n      ) : (\r\n        <>\r\n          {/* 상단 배너 */}\r\n          <Banner\r\n            bgPhoto={makeImagePath(latest?.results[0].backdrop_path || \"\")}\r\n          >\r\n            <Title>{latest?.results[0].name}</Title>\r\n            <Overview>{latest?.results[0].overview}</Overview>\r\n            <div>\r\n              <BannerDetailButton\r\n                variants={boxVariants}\r\n                initial=\"normal\"\r\n                transition={{ type: \"tween\" }}\r\n                onTap={() => onBoxClicked(latest?.results[0])}\r\n                layoutId={latest?.results[0].id + \"\"}\r\n              >\r\n                자세히 보기\r\n              </BannerDetailButton>\r\n            </div>\r\n          </Banner>\r\n          {/* 미디어 슬라이드 */}\r\n          <GroupSection>\r\n            <SlideGroup>\r\n              <SlideTitle>현재 방영 중</SlideTitle>\r\n              <SlideComponent\r\n                data={latest!}\r\n                setClickedTvSeriese={setClickedTvSeriese}\r\n              />\r\n            </SlideGroup>\r\n            <SlideGroup>\r\n              <SlideTitle>인기가 많은</SlideTitle>\r\n              <SlideComponent\r\n                data={popular!}\r\n                setClickedTvSeriese={setClickedTvSeriese}\r\n              />\r\n            </SlideGroup>\r\n            <SlideGroup>\r\n              <SlideTitle>가장 평점이 높은</SlideTitle>\r\n              <SlideComponent\r\n                data={topRated!}\r\n                setClickedTvSeriese={setClickedTvSeriese}\r\n              />\r\n            </SlideGroup>\r\n          </GroupSection>\r\n          {/* 미디어 디테일 */}\r\n          <AnimatePresence>\r\n            {tvDetailMatch ? (\r\n              <>\r\n                <Overlay\r\n                  onClick={onOverlayClick}\r\n                  exit={{ opacity: 0 }}\r\n                  animate={{ opacity: 1 }}\r\n                />\r\n                <BigMovie\r\n                  style={{ top: scrollY.get() + 100 }}\r\n                  layoutId={tvDetailMatch.params.tvSeriesId}\r\n                >\r\n                  {clickedTvSeries && (\r\n                    <>\r\n                      <BigCover\r\n                        style={{\r\n                          backgroundImage: `linear-gradient(to top, black, transparent), url(${makeImagePath(\r\n                            clickedTvSeries.poster_path,\r\n                            \"w500\"\r\n                          )})`,\r\n                        }}\r\n                      />\r\n                      <BigTitle>{clickedTvSeries.name}</BigTitle>\r\n                      <SmallTitle>{clickedTvSeries.original_name}</SmallTitle>\r\n                      <BigOverview>{clickedTvSeries.overview}</BigOverview>\r\n                    </>\r\n                  )}\r\n                </BigMovie>\r\n              </>\r\n            ) : null}\r\n          </AnimatePresence>\r\n        </>\r\n      )}\r\n    </Wrapper>\r\n  );\r\n}\r\nexport default Tv;\r\n","import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Header from \"./Components/Header\";\r\nimport Home from \"./Routes/Home\";\r\nimport Search from \"./Routes/Search\";\r\nimport Tv from \"./Routes/Tv\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Header />\r\n      <Switch>\r\n        <Route\r\n          path={[\r\n            `${process.env.PUBLIC_URL}/search`,\r\n            `${process.env.PUBLIC_URL}/search/movie/:movieId`,\r\n            `${process.env.PUBLIC_URL}/search/tv/:tvSeriesId`,\r\n          ]}\r\n        >\r\n          <Search />\r\n        </Route>\r\n        <Route\r\n          path={[\r\n            `${process.env.PUBLIC_URL}/tv`,\r\n            `${process.env.PUBLIC_URL}/tv/:tvSeriesId`,\r\n          ]}\r\n        >\r\n          <Tv />\r\n        </Route>\r\n        <Route\r\n          path={[\r\n            `${process.env.PUBLIC_URL}`,\r\n            `${process.env.PUBLIC_URL}/movies/:movieId`,\r\n          ]}\r\n        >\r\n          <Home />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\r\nhtml, body, div, span, applet, object, iframe,\r\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\r\na, abbr, acronym, address, big, cite, code,\r\ndel, dfn, em, img, ins, kbd, q, s, samp,\r\nsmall, strike, strong, sub, sup, tt, var,\r\nb, u, i, center,\r\ndl, dt, dd, menu, ol, ul, li,\r\nfieldset, form, label, legend,\r\ntable, caption, tbody, tfoot, thead, tr, th, td,\r\narticle, aside, canvas, details, embed,\r\nfigure, figcaption, footer, header, hgroup,\r\nmain, menu, nav, output, ruby, section, summary,\r\ntime, mark, audio, video {\r\n  margin: 0;\r\n  padding: 0;\r\n  border: 0;\r\n  font-size: 100%;\r\n  font: inherit;\r\n  vertical-align: baseline;\r\n}\r\n/* HTML5 display-role reset for older browsers */\r\narticle, aside, details, figcaption, figure,\r\nfooter, header, hgroup, main, menu, nav, section {\r\n  display: block;\r\n}\r\n/* HTML5 hidden-attribute fix for newer browsers */\r\n*[hidden] {\r\n    display: none;\r\n}\r\nbody {\r\n  line-height: 1;\r\n}\r\nmenu, ol, ul {\r\n  list-style: none;\r\n}\r\nblockquote, q {\r\n  quotes: none;\r\n}\r\nblockquote:before, blockquote:after,\r\nq:before, q:after {\r\n  content: '';\r\n  content: none;\r\n}\r\ntable {\r\n  border-collapse: collapse;\r\n  border-spacing: 0;\r\n}\r\n* {\r\n  box-sizing: border-box;\r\n}\r\nbody {\r\n  font-weight: 300;\r\n  font-family: 'Source Sans Pro', sans-serif;\r\n  color:${(props) => props.theme.white.darker};\r\n  line-height: 1.2;\r\n  background-color: black;\r\n}\r\na {\r\n  text-decoration:none;\r\n  color:inherit;\r\n}\r\n`;\r\n\r\nexport default GlobalStyle;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { RecoilRoot } from \"recoil\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport App from \"./App\";\r\nimport { QueryClient, QueryClientProvider } from \"react-query\";\r\nimport { theme } from \"./theme\";\r\nimport GlobalStyle from \"./Reset\";\r\n\r\nconst client = new QueryClient();\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <RecoilRoot>\r\n      <QueryClientProvider client={client}>\r\n        <ThemeProvider theme={theme}>\r\n          <GlobalStyle />\r\n          <App />\r\n        </ThemeProvider>\r\n      </QueryClientProvider>\r\n    </RecoilRoot>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n","import { DefaultTheme } from \"styled-components\";\r\n\r\nexport const theme: DefaultTheme = {\r\n  red: \"#E51013\",\r\n  black: {\r\n    veryDark: \"#141414\",\r\n    darker: \"#181818\",\r\n    lighter: \"#2F2F2F\",\r\n  },\r\n  white: {\r\n    lighter: \"#fff\",\r\n    darker: \"#e5e5e5\",\r\n  },\r\n};\r\n"],"sourceRoot":""}